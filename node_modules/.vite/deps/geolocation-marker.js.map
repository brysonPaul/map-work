{
  "version": 3,
  "sources": ["../../geolocation-marker/src/geolocation-marker.js", "../../geolocation-marker/ [synthetic:es6/util/inherits] ", "../../geolocation-marker/src/geolocation-marker-exports.js"],
  "sourcesContent": ["/**\r\n * @license geolocation-marker\r\n * @copyright 2012, 2015 Chad Killingsworth\r\n * @see https://github.com/ChadKillingsworth/geolocation-marker/blob/master/LICENSE.txt\r\n */\r\n\r\n/**\r\n * @name GeolocationMarker for Google Maps v3\r\n * @version version 1.1\r\n * @author Chad Killingsworth [chadkillingsworth at gmail.com]\r\n * Copyright 2012\r\n * @fileoverview\r\n * This library uses geolocation to add a marker and accuracy circle to a map.\r\n * The marker position is automatically updated as the user position changes.\r\n */\r\n\r\n'use strict';\r\n\r\nclass GeolocationMarker extends google.maps.MVCObject {\r\n  /**\r\n  * @param {google.maps.Map=} opt_map\r\n  * @param {(google.maps.MarkerOptions|Object.<string>)=} opt_outerMarkerOpts\r\n  * @param {(google.maps.MarkerOptions|Object.<string>)=} opt_markerOpts\r\n  * @param {(google.maps.CircleOptions|Object.<string>)=} opt_circleOpts\r\n  */\r\n  constructor(opt_map, opt_outerMarkerOpts, opt_markerOpts, opt_circleOpts) {\r\n     super();\r\n\r\n     /**\r\n      * @private\r\n      * @type {google.maps.Marker}\r\n      */\r\n     this.outerMarker_ = null;\r\n\r\n     /**\r\n      * @private\r\n      * @type {google.maps.Marker}\r\n      */\r\n     this.marker_ = null;\r\n\r\n     /**\r\n      * @private\r\n      * @type {google.maps.Circle}\r\n      */\r\n     this.circle_ = null;\r\n\r\n     /**\r\n      * @private\r\n      * @type {number}\r\n      */\r\n     this.watchId_ = -1;\r\n\r\n     var outerMarkerOpts = {\r\n       'clickable': false,\r\n       'cursor': 'pointer',\r\n       'draggable': false,\r\n       'flat': true,\r\n       'icon': {\r\n           'path': google.maps.SymbolPath.CIRCLE,\r\n           'fillColor': '#C8D6EC',\r\n           'fillOpacity': 0.7,\r\n           'scale': 12,\r\n           'strokeWeight': 0,\r\n       },\r\n       'position': new google.maps.LatLng(0, 0),\r\n       'title': 'Current location',\r\n       'zIndex': 2\r\n     };\r\n\r\n     var markerOpts = {\r\n       'clickable': false,\r\n       'cursor': 'pointer',\r\n       'draggable': false,\r\n       'flat': true,\r\n       'icon': {\r\n           'path': google.maps.SymbolPath.CIRCLE,\r\n           'fillColor': '#4285F4',\r\n           'fillOpacity': 1,\r\n           'scale': 6,\r\n           'strokeColor': 'white',\r\n           'strokeWeight': 2,\r\n       },\r\n       // This marker may move frequently - don't force canvas tile redraw\r\n       'optimized': false,\r\n       'position': new google.maps.LatLng(0, 0),\r\n       'title': 'Current location',\r\n       'zIndex': 3\r\n     };\r\n\r\n     if(opt_outerMarkerOpts) {\r\n       outerMarkerOpts = this.copyOptions_(outerMarkerOpts, opt_outerMarkerOpts);\r\n     }\r\n\r\n     if(opt_markerOpts) {\r\n       markerOpts = this.copyOptions_(markerOpts, opt_markerOpts);\r\n     }\r\n\r\n     var circleOpts = {\r\n       'clickable': false,\r\n       'radius': 0,\r\n       'strokeColor': '1bb6ff',\r\n       'strokeOpacity': .4,\r\n       'fillColor': '61a0bf',\r\n       'fillOpacity': .4,\r\n       'strokeWeight': 1,\r\n       'zIndex': 1\r\n     };\r\n\r\n     if(opt_circleOpts) {\r\n       circleOpts = this.copyOptions_(circleOpts, opt_circleOpts);\r\n     }\r\n\r\n     this.outerMarker_ = new google.maps.Marker(outerMarkerOpts);\r\n     this.marker_ = new google.maps.Marker(markerOpts);\r\n     this.circle_ = new google.maps.Circle(circleOpts);\r\n\r\n     google.maps.MVCObject.prototype.set.call(this, 'accuracy', null);\r\n     google.maps.MVCObject.prototype.set.call(this, 'position', null);\r\n     google.maps.MVCObject.prototype.set.call(this, 'map', null);\r\n\r\n     this.set('minimum_accuracy', null);\r\n\r\n     this.set('position_options', /** GeolocationPositionOptions */\r\n         ({enableHighAccuracy: true, maximumAge: 1000}));\r\n\r\n     this.circle_.bindTo('map', this.outerMarker_);\r\n     this.circle_.bindTo('map', this.marker_);\r\n\r\n     if(opt_map) {\r\n       this.setMap(opt_map);\r\n     }\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * @param {string} key\r\n   * @param {*} value\r\n   */\r\n  set(key, value) {\r\n     if (GeolocationMarker.invalidPropertiesExpr_.test(key)) {\r\n       throw '\\'' + key + '\\' is a read-only property.';\r\n     } else if (key === 'map') {\r\n       this.setMap(/** @type {google.maps.Map} */ (value));\r\n     } else {\r\n       google.maps.MVCObject.prototype.set.call(this, key, value);\r\n     }\r\n  }\r\n\r\n  /** @return {google.maps.Map} */\r\n  getMap() {\r\n     return /** @type {google.maps.Map|null} */ (this.get('map'));\r\n  }\r\n\r\n  /** @return {GeolocationPositionOptions} */\r\n  getPositionOptions() {\r\n     return /** @type {GeolocationPositionOptions} */(this.get('position_options'));\r\n  }\r\n\r\n  /** @param {!GeolocationPositionOptions|!Object.<string, *>} positionOpts */\r\n  setPositionOptions(positionOpts) {\r\n     this.set('position_options', positionOpts);\r\n  }\r\n\r\n  /** @return {google.maps.LatLng|null} */\r\n  getPosition() {\r\n     return /** @type {google.maps.LatLng|null} */ (this.get('position'));\r\n  }\r\n\r\n  /** @return {google.maps.LatLngBounds?} */\r\n  getBounds() {\r\n     if (this.get('position')) {\r\n       return this.circle_.getBounds();\r\n     } else {\r\n       return null;\r\n     }\r\n  }\r\n\r\n  /** @return {number|null} */\r\n  getAccuracy() {\r\n     return /** @type {number|null} */ (this.get('accuracy'));\r\n  }\r\n\r\n  /** @return {number|null} */\r\n  getMinimumAccuracy() {\r\n     return /** @type {number|null} */ (this.get('minimum_accuracy'));\r\n  }\r\n\r\n  /** @param {number|null} accuracy */\r\n  setMinimumAccuracy(accuracy) {\r\n     this.set('minimum_accuracy', accuracy);\r\n  }\r\n\r\n  /** @param {google.maps.Map|null} map */\r\n  setMap(map) {\r\n     google.maps.MVCObject.prototype.set.call(this, 'map', map);\r\n     if (map) {\r\n       this.watchPosition_();\r\n     } else {\r\n       this.outerMarker_.unbind('position');\r\n       this.marker_.unbind('position');\r\n       this.circle_.unbind('center');\r\n       this.circle_.unbind('radius');\r\n       google.maps.MVCObject.prototype.set.call(this, 'accuracy', null);\r\n       google.maps.MVCObject.prototype.set.call(this, 'position', null);\r\n       navigator.geolocation.clearWatch(this.watchId_);\r\n       this.watchId_ = -1;\r\n       this.outerMarker_.setMap(map);\r\n       this.marker_.setMap(map);\r\n     }\r\n  }\r\n\r\n  /** @param {google.maps.MarkerOptions|Object.<string>} outerMarkerOpts */\r\n  setOuterMarkerOptions(outerMarkerOpts) {\r\n     this.outerMarker_.setOptions(this.copyOptions_({}, outerMarkerOpts));\r\n  }\r\n\r\n  /** @param {google.maps.MarkerOptions|Object.<string>} markerOpts */\r\n  setMarkerOptions(markerOpts) {\r\n     this.marker_.setOptions(this.copyOptions_({}, markerOpts));\r\n  }\r\n\r\n  /** @param {google.maps.CircleOptions|Object.<string>} circleOpts */\r\n  setCircleOptions(circleOpts) {\r\n     this.circle_.setOptions(this.copyOptions_({}, circleOpts));\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {GeolocationPosition} position\r\n   */\r\n  updatePosition_(position) {\r\n     var newPosition = new google.maps.LatLng(position.coords.latitude,\r\n         position.coords.longitude), mapNotSet = this.marker_.getMap() == null;\r\n\r\n     if (mapNotSet) {\r\n       if (this.getMinimumAccuracy() != null &&\r\n           position.coords.accuracy > this.getMinimumAccuracy()) {\r\n         return;\r\n       }\r\n       this.outerMarker_.setMap(this.getMap());\r\n       this.marker_.setMap(this.getMap());\r\n       this.outerMarker_.bindTo('position', this);\r\n       this.marker_.bindTo('position', this);\r\n       this.circle_.bindTo('center', this, 'position');\r\n       this.circle_.bindTo('radius', this, 'accuracy');\r\n     }\r\n\r\n     if (this.getAccuracy() != position.coords.accuracy) {\r\n       // The local set method does not allow accuracy to be updated\r\n       google.maps.MVCObject.prototype.set.call(this, 'accuracy',\r\n           position.coords.accuracy);\r\n     }\r\n\r\n     if (mapNotSet || this.getPosition() == null ||\r\n         !this.getPosition().equals(newPosition)) {\r\n       // The local set method does not allow position to be updated\r\n       google.maps.MVCObject.prototype.set.call(this, 'position', newPosition);\r\n     }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   */\r\n  watchPosition_() {\r\n     if (navigator.geolocation) {\r\n       this.watchId_ = navigator.geolocation.watchPosition(\r\n           this.updatePosition_.bind(this),\r\n           this.geolocationError_.bind(this),\r\n           this.getPositionOptions());\r\n     }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {GeolocationPositionError} data\r\n   */\r\n  geolocationError_(data) {\r\n     google.maps.event.trigger(this, 'geolocation_error', data);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Object.<string,*>} target\r\n   * @param {Object.<string,*>} source\r\n   * @return {Object.<string,*>}\r\n   */\r\n  copyOptions_(target, source) {\r\n     for (var opt in source) {\r\n       if (GeolocationMarker.DISALLOWED_OPTIONS[opt] !== true) {\r\n         target[opt] = source[opt];\r\n       }\r\n     }\r\n     return target;\r\n  }\r\n}\r\n\r\n/**\r\n * @const\r\n * @type {Object.<string, boolean>}\r\n */\r\nGeolocationMarker.DISALLOWED_OPTIONS = {\r\n    'map': true,\r\n    'position': true,\r\n    'radius': true\r\n};\r\n\r\n/**\r\n * @private\r\n * @const\r\n */\r\nGeolocationMarker.invalidPropertiesExpr_ = /^(?:position|accuracy)$/i;\r\n\r\nexport default GeolocationMarker;\r\n", null, "/*\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *       http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * @name GeolocationMarker for Google Maps v3\r\n * @version version 1.1\r\n * @author Chad Killingsworth [chadkillingsworth at gmail.com]\r\n * Copyright 2012\r\n * @fileoverview\r\n * Exports for compiling the GeolocationMarker library with Closure-compiler\r\n * for use in external code. When compiling the library with other user\r\n * scripts, these exports are not needed.\r\n */\r\n\r\nimport GeolocationMarker from './geolocation-marker.js';\r\n\r\n;(function(root, factory) {\r\n   if (typeof root['define'] === 'function' && root['define']['amd']) {\r\n     root['define']([], factory);\r\n   } else if (typeof root['exports'] === 'object') {\r\n     root['module']['exports'] = factory();\r\n   } else {\r\n     root['GeolocationMarker'] = factory();\r\n   }\r\n }(window, function() {\r\n  GeolocationMarker.prototype['getAccuracy'] = GeolocationMarker.prototype.getAccuracy;\r\n  GeolocationMarker.prototype['getBounds'] = GeolocationMarker.prototype.getBounds;\r\n  GeolocationMarker.prototype['getMap'] = GeolocationMarker.prototype.getMap;\r\n  GeolocationMarker.prototype['getMinimumAccuracy'] = GeolocationMarker.prototype.getMinimumAccuracy;\r\n  GeolocationMarker.prototype['getPosition'] = GeolocationMarker.prototype.getPosition;\r\n  GeolocationMarker.prototype['getPositionOptions'] = GeolocationMarker.prototype.getPositionOptions;\r\n  GeolocationMarker.prototype['setCircleOptions'] = GeolocationMarker.prototype.setCircleOptions;\r\n  GeolocationMarker.prototype['setMap'] = GeolocationMarker.prototype.setMap;\r\n  GeolocationMarker.prototype['setMarkerOptions'] = GeolocationMarker.prototype.setMarkerOptions;\r\n  GeolocationMarker.prototype['setMinimumAccuracy'] = GeolocationMarker.prototype.setMinimumAccuracy;\r\n  GeolocationMarker.prototype['setPositionOptions'] = GeolocationMarker.prototype.setPositionOptions;\r\n\r\n  return GeolocationMarker;\r\n}));\r\n"],
  "mappings": "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",
  "names": ["constructor", "GeolocationMarker", "opt_map", "opt_outerMarkerOpts", "opt_markerOpts", "opt_circleOpts", "outerMarker_", "marker_", "circle_", "watchId_", "outerMarkerOpts", "google", "maps", "SymbolPath", "CIRCLE", "LatLng", "markerOpts", "copyOptions_", "circleOpts", "Marker", "Circle", "MVCObject", "prototype", "set", "call", "enableHighAccuracy", "maximumAge", "bindTo", "setMap", "$jscomp.inherits", "GeolocationMarker$$module$src$geolocation_marker.prototype", "?.prototype", "key", "value", "GeolocationMarker$$module$src$geolocation_marker.invalidPropertiesExpr_.test", "test", "GeolocationMarker$$module$src$geolocation_marker_prototype$getMap", "getMap", "get", "getPositionOptions", "setPositionOptions", "positionOpts", "GeolocationMarker$$module$src$geolocation_marker_prototype$getPosition", "getPosition", "GeolocationMarker$$module$src$geolocation_marker_prototype$getBounds", "getBounds", "getAccuracy", "getMinimumAccuracy", "setMinimumAccuracy", "accuracy", "map", "navigator", "geolocation", "watchPosition_", "watchPosition", "updatePosition_", "bind", "geolocationError_", "unbind", "clearWatch", "setMarkerOptions", "setOptions", "setCircleOptions", "position", "newPosition", "coords", "latitude", "longitude", "mapNotSet", "equals", "data", "event", "trigger", "target", "source", "opt", "GeolocationMarker$$module$src$geolocation_marker.DISALLOWED_OPTIONS", "GeolocationMarker$$module$src$geolocation_marker.invalidPropertiesExpr_", "window", "root", "factory"]
}
